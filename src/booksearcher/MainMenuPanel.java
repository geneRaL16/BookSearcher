package booksearcher;

import java.awt.Dimension;
import java.awt.Image;
import java.util.Arrays;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author liam9
 */
public class MainMenuPanel extends javax.swing.JPanel {

    static String sortBy = "LowToHigh";

    /**
     * Creates new form MainMenuPanel
     */
    public MainMenuPanel() {
        initComponents();
        BookSearcher.initFileIO();
        BookSearcher.loadBadWords();

    }

    public void setFocusField() {
        ISBNField.requestFocusInWindow();
    }
    /**
     * Updates the reviews shown in the review dispaly
     */
    public void updateReviews() {
                String[] reviews = BookSearcher.getReviews(ISBNField.getText());
        Arrays.sort(reviews);
        String temp = "";
        System.out.println(String.valueOf(reviewSortSel.getSelectedItem()));
        switch (String.valueOf(reviewSortSel.getSelectedItem())) {

            case "LowToHigh":
                System.out.println("LowToHigh");
                for (int i = 1; i < reviews.length; i++) {
                    temp += reviews[i] + "\n";
                } break;
            case "HighToLow":
                System.out.println("HighToLow");
                for (int i = reviews.length - 1; i > 0; i--) {
                    temp += reviews[i] + "\n";
                } break;
        }
        reviewTextArea.setText(temp);
        newReviewTextArea.setText("");
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bookTitleLabel = new javax.swing.JLabel();
        googleRatingLabel = new javax.swing.JLabel();
        authorLabel = new javax.swing.JLabel();
        categoryLabel = new javax.swing.JLabel();
        publisherLabel = new javax.swing.JLabel();
        publishedDateLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionTextArea = new javax.swing.JTextArea();
        ISBNField = new javax.swing.JTextField();
        SearchButton = new javax.swing.JButton();
        ISBNLabel = new javax.swing.JLabel();
        newReviewButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        newReviewTextArea = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        reviewTextArea = new javax.swing.JTextArea();
        reviewRatingSlider = new javax.swing.JSlider();
        reviewLabel = new javax.swing.JLabel();
        createReviewLabel = new javax.swing.JLabel();
        currentSliderPosition = new javax.swing.JLabel();
        maxImageSize = new javax.swing.JLayeredPane();
        bookImageLabel = new javax.swing.JLabel();
        reviewSortSel = new javax.swing.JComboBox<>();

        bookTitleLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bookTitleLabel.setText("Title:");

        googleRatingLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        googleRatingLabel.setText("Google Rating:");

        authorLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        authorLabel.setText("Author:");

        categoryLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        categoryLabel.setText("Category:");

        publisherLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        publisherLabel.setText("Publisher:");

        publishedDateLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        publishedDateLabel.setText("Published: ");

        descriptionTextArea.setEditable(false);
        descriptionTextArea.setColumns(20);
        descriptionTextArea.setFont(new java.awt.Font("Century", 0, 14)); // NOI18N
        descriptionTextArea.setLineWrap(true);
        descriptionTextArea.setRows(5);
        descriptionTextArea.setWrapStyleWord(true);
        jScrollPane1.setViewportView(descriptionTextArea);

        SearchButton.setText("Search");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        ISBNLabel.setText("ISBN: ");

        newReviewButton.setText("Submit Review");
        newReviewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newReviewButtonActionPerformed(evt);
            }
        });

        newReviewTextArea.setColumns(20);
        newReviewTextArea.setLineWrap(true);
        newReviewTextArea.setRows(5);
        newReviewTextArea.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane2.setViewportView(newReviewTextArea);

        reviewTextArea.setEditable(false);
        reviewTextArea.setColumns(20);
        reviewTextArea.setFont(new java.awt.Font("Segoe UI Emoji", 0, 13)); // NOI18N
        reviewTextArea.setLineWrap(true);
        reviewTextArea.setRows(5);
        jScrollPane3.setViewportView(reviewTextArea);

        reviewRatingSlider.setMajorTickSpacing(1);
        reviewRatingSlider.setMaximum(5);
        reviewRatingSlider.setMinimum(1);
        reviewRatingSlider.setMinorTickSpacing(1);
        reviewRatingSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                reviewRatingSliderStateChanged(evt);
            }
        });

        reviewLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        reviewLabel.setText("Reviews:");
        reviewLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        createReviewLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        createReviewLabel.setText("Create Review:");

        currentSliderPosition.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        currentSliderPosition.setText("5/5");

        bookImageLabel.setPreferredSize(new java.awt.Dimension(200, 200));

        maxImageSize.setLayer(bookImageLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout maxImageSizeLayout = new javax.swing.GroupLayout(maxImageSize);
        maxImageSize.setLayout(maxImageSizeLayout);
        maxImageSizeLayout.setHorizontalGroup(
            maxImageSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(maxImageSizeLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(bookImageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
                .addContainerGap())
        );
        maxImageSizeLayout.setVerticalGroup(
            maxImageSizeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, maxImageSizeLayout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(bookImageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                .addGap(29, 29, 29))
        );

        reviewSortSel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "LowToHigh", "HighToLow" }));
        reviewSortSel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reviewSortSelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(ISBNLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ISBNField, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(SearchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(148, 148, 148))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(googleRatingLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(publisherLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(publishedDateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(bookTitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(authorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(categoryLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(maxImageSize)
                                .addGap(34, 34, 34))
                            .addComponent(jScrollPane1))
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(newReviewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(reviewLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(reviewSortSel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(createReviewLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(10, 10, 10)
                        .addComponent(reviewRatingSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(currentSliderPosition, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(25, 25, 25))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bookTitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(googleRatingLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(authorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(categoryLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(13, 13, 13)
                        .addComponent(publisherLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(13, 13, 13)
                        .addComponent(publishedDateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(37, 37, 37))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(maxImageSize)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(ISBNField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(SearchButton)
                        .addComponent(ISBNLabel)))
                .addGap(18, 18, 18))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reviewLabel)
                    .addComponent(reviewSortSel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(currentSliderPosition, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(reviewRatingSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(createReviewLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newReviewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        BookSearcher.addBook(ISBNField.getText());
        try {
            String[] info = BookSearcher.getBookInfo(ISBNField.getText());
            bookTitleLabel.setText("Title: " + info[0]);
            googleRatingLabel.setText("Google Rating: " + info[1]);
            authorLabel.setText("Author: " + info[2]);
            categoryLabel.setText("Category: " + info[3]);
            publisherLabel.setText("Publisher: " + info[4]);
            publishedDateLabel.setText("Pusblished: " + info[5]);
            descriptionTextArea.setText(info[6]);

            ImageIcon icon = new ImageIcon(BookSearcher.getBookImage(ISBNField.getText()));
            int height = icon.getIconHeight() * 2;
            int width = icon.getIconWidth() * 2;
            int maxHeight = maxImageSize.getHeight();
            int maxWidth = maxImageSize.getWidth();
            Image scaleImage = icon.getImage().getScaledInstance(width, height, Image.SCALE_SMOOTH);
            Dimension bookSize = new Dimension(width, height);
            bookImageLabel.setPreferredSize(bookSize);

            bookImageLabel.setIcon(new ImageIcon(scaleImage));
            ISBNField.selectAll();
        } catch (IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Book not found in database!", "Sorry!", JOptionPane.INFORMATION_MESSAGE);
        }
        updateReviews();
    }//GEN-LAST:event_SearchButtonActionPerformed

    private void newReviewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newReviewButtonActionPerformed
        int isbnLoc = BookSearcher.searchISBN(ISBNField.getText());
        if (newReviewTextArea.getText().length() >= 0 && isbnLoc >= 0) {
            if (BookSearcher.checkBadWord(newReviewTextArea.getText())) {
                BookSearcher.addReview(ISBNField.getText(), reviewRatingSlider.getValue(), newReviewTextArea.getText());
            } else {
                JOptionPane.showMessageDialog(null, "Reviews cannot contain profanity!", "Sorry!", JOptionPane.INFORMATION_MESSAGE);
            }
        } else if (isbnLoc < 0) {
            JOptionPane.showMessageDialog(null, "Please enter a valid ISBN!", "Sorry!", JOptionPane.INFORMATION_MESSAGE);
        } else if (newReviewTextArea.getText().length() <= 0) {
            JOptionPane.showMessageDialog(null, "Please enter a review first!", "Sorry!", JOptionPane.INFORMATION_MESSAGE);
        }
        updateReviews();
    }//GEN-LAST:event_newReviewButtonActionPerformed

    private void reviewRatingSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_reviewRatingSliderStateChanged
        String currentRating = Integer.toString(reviewRatingSlider.getValue());
        currentSliderPosition.setText(currentRating + "/5");
    }//GEN-LAST:event_reviewRatingSliderStateChanged

    private void reviewSortSelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reviewSortSelActionPerformed
        updateReviews();
    }//GEN-LAST:event_reviewSortSelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ISBNField;
    private javax.swing.JLabel ISBNLabel;
    protected static javax.swing.JButton SearchButton;
    private javax.swing.JLabel authorLabel;
    private javax.swing.JLabel bookImageLabel;
    private javax.swing.JLabel bookTitleLabel;
    private javax.swing.JLabel categoryLabel;
    private javax.swing.JLabel createReviewLabel;
    private javax.swing.JLabel currentSliderPosition;
    private javax.swing.JTextArea descriptionTextArea;
    private javax.swing.JLabel googleRatingLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLayeredPane maxImageSize;
    private javax.swing.JButton newReviewButton;
    private javax.swing.JTextArea newReviewTextArea;
    private javax.swing.JLabel publishedDateLabel;
    private javax.swing.JLabel publisherLabel;
    private javax.swing.JLabel reviewLabel;
    private javax.swing.JSlider reviewRatingSlider;
    private javax.swing.JComboBox<String> reviewSortSel;
    private javax.swing.JTextArea reviewTextArea;
    // End of variables declaration//GEN-END:variables
}
